{"map":"{\"version\":3,\"file\":\"_cookie.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/bin/_cookie.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"/// <reference path=\"./_cookie.d.ts\" />\r\n/**\r\n * 获取cookie值\r\n * @param  {string} name 需要获取的cookie名称\r\n * @return {string} 对应的cookie值或''\r\n */\r\nvar get = function (name) {\r\n    if (typeof name !== 'string' || !name) {\r\n        throw new Error('Invalid cookie name');\r\n    }\r\n    ;\r\n    var obj = toJson();\r\n    return obj[name];\r\n}, \r\n/**\r\n * 将cookie转为Json\r\n * @returns Object  返回一个Json对象\r\n */\r\ntoJson = function () {\r\n    var obj = {}, cookieVal = document.cookie, cookieList = cookieVal ? cookieVal.split('; ') : [];\r\n    if (cookieList.length) {\r\n        for (var i = 0, len = cookieList.length; i < len; i++) {\r\n            var item = cookieList[i], aItem = item.split('='), key = aItem[0], val = aItem[1];\r\n            obj[key] = val;\r\n        }\r\n        ;\r\n    }\r\n    ;\r\n    return obj;\r\n}, \r\n// 设置cookie选项\r\nsetDefaultOption = {\r\n    // 默认路径为根目录\r\n    path: '/',\r\n    // 域名如果有\r\n    domain: location.hostname.indexOf('www') > -1 ? location.hostname.replace('www', '') : location.hostname,\r\n    expires: 0\r\n}, \r\n/**\r\n * 设置cookie\r\n * @param  {string} name    cookie名称\r\n * @param  {string} val     cookie值\r\n * @param  {SetOption=setDefaultOption} option  选项\r\n */\r\nset = function (name, val, option) {\r\n    if (option === void 0) { option = setDefaultOption; }\r\n    // 遍历选项，如果未被传入参数则使用默认参数代替\r\n    for (var i in setDefaultOption) {\r\n        var item = setDefaultOption[i];\r\n        if (option[i] === undefined) {\r\n            option[i] = item;\r\n        }\r\n        ;\r\n    }\r\n    ;\r\n    var date = (function () {\r\n        var time = new Date;\r\n        time.setDate(time.getDate() + option.expires);\r\n        return time.toString();\r\n    })(), domain = option.domain, path = option.path, expires = date, cookie = name + \"=\" + val + \"; domain=\" + domain + \"; path=\" + path + \"; expires=\" + expires;\r\n    //name=val; domain=.1x3x.com; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT\r\n    document.cookie = cookie;\r\n}, \r\n/**\r\n * 删除cookie\r\n * @param  {string} name    需要删除的cookie名称\r\n * @param  {SetOption=setDefaultOption} option  cookie选项\r\n */\r\ndel = function (name, option) {\r\n    if (option === void 0) { option = setDefaultOption; }\r\n    var setOption = {};\r\n    for (var key in option) {\r\n        setOption[key] = option[key];\r\n    }\r\n    ;\r\n    setOption.expires = -1;\r\n    set(name, '', setOption);\r\n};\r\nexport default { get: get, toJson: toJson, set: set, del: del };\r\n//# sourceMappingURL=_cookie.js.map"}
